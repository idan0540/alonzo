[{"C:\\dev\\alon\\alonzo\\src\\index.js":"1","C:\\dev\\alon\\alonzo\\src\\App.js":"2","C:\\dev\\alon\\alonzo\\src\\reportWebVitals.js":"3","C:\\dev\\alon\\alonzo\\src\\components\\autocomplete-search-table\\autocomplete-search-table.js":"4","C:\\dev\\alon\\alonzo\\src\\components\\autocomplete-search-table-v2\\autocomplete-search-table-v2.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":331,"mtime":1610644537880,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":4934,"mtime":1610644173598,"results":"10","hashOfConfig":"7"},{"size":4975,"mtime":1610644361244,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"clusfp",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"C:\\dev\\alon\\alonzo\\src\\index.js",[],["25","26"],"C:\\dev\\alon\\alonzo\\src\\App.js",[],"C:\\dev\\alon\\alonzo\\src\\reportWebVitals.js",[],"C:\\dev\\alon\\alonzo\\src\\components\\autocomplete-search-table\\autocomplete-search-table.js",["27"],"import './autocomplete-search-table.css';\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Parser from 'html-react-parser';\r\n\r\nconst columns = [\r\n  { id: \"name\", label: \"שם\", minWidth: 200 },\r\n  { id: \"date\", label: \"תאריך עדכון\", minWidth: 100 },\r\n  { id: \"classified\", label: \"מסווג\", minWidth: 50, classes: { backgroundColor: '#56ff2c', color: '#56ff2c' } },\r\n];\r\n\r\nfunction createData(name, date, classified) {\r\n  return { name, date, classified };\r\n}\r\n\r\nconst rows = [\r\n  createData('אפיון פרויקט', '21.1.14', 'לא'),\r\n  createData('אפיון פרויקט גמר', '12.1.20', 'לא'),\r\n  createData('אפיון פרוגקט', '1.2.15', 'כן'),\r\n  createData('אפיון פרויקט 19', '5.12.18', 'לא'),\r\n  createData('אפיון פרו סופי', '4.2.14', 'לא'),\r\n  createData('אפיון פרופלור', '8.5.15', 'כן'),\r\n  createData('אפיון פרצת.ויקט 19', '5.12.18', 'לא'),\r\n  createData('אפיון פרו סופי', '4.2.14', 'לא'),\r\n  createData('אפישדגון וןףץפרופלור', '8.5.15', 'כן'),\r\n  createData('אפשדגיון פרויקט 19', '5.12.18', 'לא'),\r\n  createData('אשדגפיון פרו סופי', '4.2.14', 'לא'),\r\n  createData('אפיושדן פרופף8ת.צ7לור', '8.5.15', 'כן'),\r\n  createData('אדשפיועךן פילךרויקט 19', '5.12.18', 'לא'),\r\n  createData('אפ76יון פרו סופי', '4.2.14', 'לא'),\r\n  createData('אפ436טכיון פרופלור', '8.5.15', 'כן'),\r\n  createData('אפיועיצן פרתיי.ויקט 19', '5.12.18', 'לא'),\r\n  createData('אפיוילך.ן פרו סופי', '4.2.14', 'לא'),\r\n  createData('אפיי.ךלון פרופלור', '8.5.15', 'כן'),\r\n];\r\n\r\n\r\nexport default function AutocompleteSearchTable() {\r\n\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [isTableOpen, setIsTableOpen] = useState(false);\r\n\r\n  function inputTextChanged(event) {\r\n    setInputText(event.target.value);\r\n    console.log(event.target.value);\r\n  }\r\n\r\n  function rowClick(event) {\r\n    console.log(event.target);\r\n    setIsTableOpen(false);\r\n  }\r\n\r\n  function blurCheck(event) {\r\n    const focusInCurrentTarget = ({ relatedTarget, currentTarget }) => {\r\n      if (relatedTarget === null) return false;\r\n      let node = relatedTarget.parentNode;\r\n      while (node !== null) {\r\n        if (node === currentTarget) return true;\r\n        node = node.parentNode;\r\n      }\r\n      return false;\r\n    }\r\n    if (!focusInCurrentTarget(event)) {\r\n      setIsTableOpen(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"autocomplete-search-table_container\" onBlur={blurCheck}>\r\n      <input className=\"autocomplete-search-table_input\" placeholder=\"חפש...\" onChange={inputTextChanged} onFocus={() => setIsTableOpen(true)}></input>\r\n      {isTableOpen ? <Paper className=\"autocomplete-search-table_table\" onChange={() => setIsTableOpen(true)}>\r\n        <TableContainer className=\"autocomplete-search-table_table-container\">\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={'right'}\r\n                    style={{ minWidth: column.minWidth }}\r\n                    size={'small'}>\r\n                    {Parser(column.label.bold())}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => {\r\n                if (row.name.toLowerCase().indexOf(inputText.toLowerCase()) !== -1) {\r\n                  return (\r\n                    <TableRow className=\"autocomplete-search-table_table-row\" hover role=\"checkbox\" tabIndex={-1} key={row.code} onClick={rowClick}>\r\n                      {columns.map((column) => {\r\n                        let value = row[column.id];\r\n                        if (column.id === 'name') {\r\n                          value = value.replace(inputText, '<b>' + inputText + '</b>');\r\n                        }\r\n                        return (\r\n                          <TableCell key={column.id} align={'right'} size={'small'}>\r\n                            {Parser(value)}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                    </TableRow>\r\n                  );\r\n                }\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper> : null}\r\n    </div>\r\n  );\r\n}\r\n","C:\\dev\\alon\\alonzo\\src\\components\\autocomplete-search-table-v2\\autocomplete-search-table-v2.js",["28"],"import './autocomplete-search-table-v2.css';\r\nimport React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Parser from 'html-react-parser';\r\n\r\nconst columns = [\r\n  { id: \"name\", label: \"שם\", minWidth: 200 },\r\n  { id: \"date\", label: \"תאריך עדכון\", minWidth: 100 },\r\n  { id: \"classified\", label: \"מסווג\", minWidth: 50, classes: { backgroundColor: '#56ff2c', color: '#56ff2c' } },\r\n];\r\n\r\nfunction createData(name, date, classified) {\r\n  return { name, date, classified };\r\n}\r\n\r\nconst rows = [\r\n  createData('אפיון פרויקט', '21.1.14', 'לא'),\r\n  createData('אפיון פרויקט גמר', '12.1.20', 'לא'),\r\n  createData('אפיון פרוגקט', '1.2.15', 'כן'),\r\n  createData('אפיון פרויקט 19', '5.12.18', 'לא'),\r\n  createData('אפיון פרו סופי', '4.2.14', 'לא'),\r\n  createData('אפיון פרופלור', '8.5.15', 'כן'),\r\n  createData('אפיון פרצת.ויקט 19', '5.12.18', 'לא'),\r\n  createData('אפיון פרו סופי', '4.2.14', 'לא'),\r\n  createData('אפישדגון וןףץפרופלור', '8.5.15', 'כן'),\r\n  createData('אפשדגיון פרויקט 19', '5.12.18', 'לא'),\r\n  createData('אשדגפיון פרו סופי', '4.2.14', 'לא'),\r\n  createData('אפיושדן פרופף8ת.צ7לור', '8.5.15', 'כן'),\r\n  createData('אדשפיועךן פילךרויקט 19', '5.12.18', 'לא'),\r\n  createData('אפ76יון פרו סופי', '4.2.14', 'לא'),\r\n  createData('אפ436טכיון פרופלור', '8.5.15', 'כן'),\r\n  createData('אפיועיצן פרתיי.ויקט 19', '5.12.18', 'לא'),\r\n  createData('אפיוילך.ן פרו סופי', '4.2.14', 'לא'),\r\n  createData('אפיי.ךלון פרופלור', '8.5.15', 'כן'),\r\n];\r\n\r\n\r\nexport default function AutocompleteSearchTableV2() {\r\n\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [isTableOpen, setIsTableOpen] = useState(false);\r\n\r\n  function inputTextChanged(event) {\r\n    setInputText(event.target.value);\r\n    console.log(event.target.value);\r\n  }\r\n\r\n  function rowClick(event) {\r\n    console.log(event.target);\r\n    setIsTableOpen(false);\r\n  }\r\n\r\n  function blurCheck(event) {\r\n    // const focusInCurrentTarget = ({ relatedTarget, currentTarget }) => {\r\n    //   if (relatedTarget === null) return false;\r\n    //   let node = relatedTarget.parentNode;\r\n    //   while (node !== null) {\r\n    //     if (node === currentTarget) return true;\r\n    //     node = node.parentNode;\r\n    //   }\r\n    //   return false;\r\n    // }\r\n    // if (!focusInCurrentTarget(event)) {\r\n    //   setIsTableOpen(false)\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <div className=\"autocomplete-search-table_container\" onBlur={blurCheck}>\r\n      <input className=\"autocomplete-search-table_input\" placeholder=\"חפש...\" onChange={inputTextChanged} onFocus={() => setIsTableOpen(true)}></input>\r\n      {isTableOpen ? <Paper className=\"autocomplete-search-table_table\" onChange={() => setIsTableOpen(true)}>\r\n        <TableContainer className=\"autocomplete-search-table_table-container\">\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={'right'}\r\n                    style={{ minWidth: column.minWidth }}\r\n                    size={'small'}>\r\n                    {Parser(column.label.bold())}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => {\r\n                if (row.name.toLowerCase().indexOf(inputText.toLowerCase()) !== -1) {\r\n                  return (\r\n                    <TableRow className=\"autocomplete-search-table_table-row\" hover role=\"checkbox\" tabIndex={-1} key={row.code} onClick={rowClick}>\r\n                      {columns.map((column) => {\r\n                        let value = row[column.id];\r\n                        if (column.id === 'name') {\r\n                          value = value.replace(inputText, '<b>' + inputText + '</b>');\r\n                        }\r\n                        return (\r\n                          <TableCell key={column.id} align={'right'} size={'small'}>\r\n                            {Parser(value)}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                    </TableRow>\r\n                  );\r\n                }\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper> : null}\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":94,"column":31,"nodeType":"35","messageId":"36","endLine":94,"endColumn":33},{"ruleId":"33","severity":1,"message":"34","line":94,"column":31,"nodeType":"35","messageId":"36","endLine":94,"endColumn":33},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]